[tool.poetry]
name = "tsflex"
version = "0.4.0"  # Do not forget to update the __init__.py __version__ variable
description = "Toolkit for flexible processing & feature extraction on time-series data"
authors = ["Jonas Van Der Donckt, Jeroen Van Der Donckt, Emiel Deprost"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/predict-idlab/tsflex"
documentation = "https://predict-idlab.github.io/tsflex"
keywords = ["time-series", "processing", "feature-extraction", "data-science", "machine learning"]

[tool.poetry.dependencies]
python = ">=3.7.1,<3.13"  # When deploying set this to 3.7
pandas = [
    { version = ">=1", python = "<3.12" },
    { version = ">=2", python = ">=3.12"},
]
numpy = [
    { version = "^1.21.5", python = "<3.8" },
    { version = ">=1.22", python = ">=3.8,<3.11"},
    { version = ">=1.24", python = ">=3.11"}
]
tqdm = "^4.62.3"
multiprocess = "^0.70.12"
dill = "^0.3.4"

[tool.poetry.dev-dependencies]
pydocstyle = "^5.1.1"
Sphinx = "^3.5.2"
jupyterlab = "^3.2.9"
memory-profiler = "^0.58.0"
pytest = "^6.2.3"
pytest-cov = "^2.12.1"
pytest-benchmark = "^4.0.0"
pytest-codspeed = "^2.2"
pdoc3 = "^0.9.2"
scipy = [
    { version = "^1.7.3", python = "<3.11" },
    { version = ">=1.9", python = ">=3.11" }, # Change to >= 1.8 once this is fixed https://github.com/fraunhoferportugal/tsfel/issues/123
]
numba = [
    { version = "^0.56.4", python = "<3.8" },
    { version = ">=0.57", python = ">=3.8,<3.9" },
    { version = ">=0.59", python = ">=3.9" },
]
seglearn = "^1.2.3"
tsfresh = "^0.20.0"
# necessary to support Python 3.12
statsmodels = [
    { version = ">=0.13", python = "<3.8" },
    { version = ">=0.14", python = ">=3.8" },
]
tsfel = "^0.1.4"
# necessary to pin this version as tsfel for Python 3.7 does not pin gspread properly
gspread = [
    { version = "^5.12", python = "<3.8" },
    { version = ">=5.13", python = ">=3.8" }
]
#fastparquet = "0.8.0"  # Lock to this version to resolve issue on macos with python 3.7
pyarrow = [
    { version = ">=12", python = ">=3.7,<3.8" },
    { version = ">=15", python = ">=3.8"}
]
# Temporarily lock this version to avoid Windows install error
pycatch22 = { version = ">=0.4", markers = "sys_platform != 'win32'" }
antropy = [
    { version = "^0.1.5", python = "<3.8" },
    { version = ">=0.1.6", python = ">=3.8" }
]
nolds = "^0.5.2"
pyentrp = [
    { version = "^0.7.1", python = "<3.8" },
    { version = "^0.8.2", python = ">=3.8" }
]
# necessary to switch scikit-learn (as this is a dependency of tsfresh and seglearn)
scikit-learn = [
    { version = "<1.1.3", python = "<3.11" },
    { version = ">=1.1.3", python = ">=3.11" },
]
# Linting
ruff = "^0.0.264"
black = "^22.12.0"
mypy = [
    { version = ">=1.4", python = "<3.8" },
    { version = ">=1.5", python = ">=3.8" }
]

[tool.ruff]
select = ["E", "F", "I"]
line-length = 88
ignore = ["E501"] # Never enforce `E501` (line length violations).
[tool.ruff.per-file-ignores]
"tests/test_features_feature_collection.py" = ["F401", "F811"]
"tests/test_features_func_wrapper.py" = ["F401", "F811"]
"tests/test_features_integration.py" = ["F401", "F811"]
"tests/test_features_logging.py" = ["F401", "F811"]
"tests/test_features_utils.py" = ["F401", "F811"]
"tests/test_processing_logging.py" = ["F401", "F811"]
"tests/test_processing_series_pipeline.py" = ["F401", "F811"]
"tests/test_processing_series_processor.py" = ["F401", "F811"]
"tests/test_processing_utils.py" = ["F401", "F811"]
"tests/test_strided_rolling.py" = ["F401", "F811"]
"tests/test_stroll_factory.py" = ["F401", "F811"]
"tests/test_utils.py" = ["F401", "F811"]

# Testing
[tool.pytest.ini_options]
addopts = "--cov=tsflex --cov-report=term-missing  --benchmark-disable"
testpaths = "tests/"

# Formatting
[tool.black]
color = false
line-length = 88

# Static typing
[tool.mypy]
follow_imports = "normal"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true
# disallow_any_generics = false
ignore_missing_imports = true
# allow_redefinition = true
disable_error_code = "name-defined"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
